
# ALGORITHM_SETUP
# algorithm: rs
# algorithm(class): aitoa.algorithms.RandomSampling
# END_ALGORITHM_SETUP

# BEGIN_LOG
# fbest;consumedFEs;consumedTimeMS
2127;1;0
1706;2;0
1590;13;0
1589;19;0
1500;49;0
1422;77;0
1404;399;2
1387;1981;13
1324;13844;98
1301;72291;517
1287;123563;882
1227;133287;952
1221;3218913;22842
1208;5568790;39404
# END_OF_LOG

# BEGIN_SETUP
# SEARCH_SPACE: jssp:int[150]:la24:aitoa.examples.jssp.JSSPSearchSpace
# SEARCH_SPACE(class): aitoa.examples.jssp.JSSPSearchSpace
# NULLARY_OP: uniform
# NULLARY_OP(class): aitoa.examples.jssp.JSSPNullaryOperator
# UNARY_OP: null
# BINARY_OP: null
# TERNARY_OP: null
# SOLUTION_SPACE: jssp:gantt:la24:aitoa.examples.jssp.JSSPSolutionSpace
# SOLUTION_SPACE(class): aitoa.examples.jssp.JSSPSolutionSpace
# REPRESENTATION_MAPPING: jssp:int[]-to-Gantt:aitoa.examples.jssp.JSSPRepresentationMapping
# REPRESENTATION_MAPPING(class): aitoa.examples.jssp.JSSPRepresentationMapping
# OBJECTIVE_FUNCTION: la24
# OBJECTIVE_FUNCTION(class): aitoa.examples.jssp.JSSPMakespanObjectiveFunction
# MAX_FES: 9223372036854775807
# MAX_TIME: 180000
# GOAL_F: -Infinity
# RANDOM_SEED: 0x9c1440c4792d2a02
# END_SETUP
# BEGIN_SYSTEM
# COMPUTER_MANUFACTURER: Dell Inc.
# COMPUTER_MODEL: Vostro 3480
# CPU_FAMILY: 6
# CPU_FREQUENCY_HZ: 1800000000
# CPU_ID: AFC1FBFF008006EB
# CPU_IDENTIFIER: Intel64 Family 6 Model 142 Stepping 11
# CPU_IS_64_BIT: true
# CPU_LOGICAL_CORES: 8
# CPU_MODEL: 142
# CPU_NAME: Intel(R) Core(TM) i7-8565U CPU @ 1.80GHz
# CPU_PHYSICAL_CORES: 4
# CPU_PHYSICAL_SLOTS: 1
# CPU_VENDOR: GenuineIntel
# GPU_NAME: Advanced Micro Devices, Inc. [AMD/ATI] Jet PRO [Radeon R5 M230 / R7 M260DX / Radeon 520 Mobile]
# GPU_PCI_DEVICE_ID: 6665
# GPU_PCI_VENDOR_ID: 1002
# JAVA_SPECIFICATION_NAME: Java Platform API Specification
# JAVA_SPECIFICATION_VENDOR: Oracle Corporation
# JAVA_SPECIFICATION_VERSION: 13
# JAVA_VENDOR: Private Build
# JAVA_VERSION: 13
# JAVA_VM_NAME: OpenJDK 64-Bit Server VM
# JAVA_VM_VENDOR: Private Build
# JAVA_VM_VERSION: 13+33-Ubuntu-1
# MAINBOARD_MANUFACTURER: Dell Inc.
# MAINBOARD_MODEL: 0KTK89
# MAINBOARD_VERSION: A00
# MEMORY_PAGE_SIZE: 4096
# MEMORY_TOTAL_BYTES: 16662446080
# NET_DOMAIN_NAME: laptop
# NET_HOST_NAME: laptop
# OS_BITS: 64
# OS_BUILD: 5.3.0-29-generic
# OS_CODENAME: Eoan Ermine
# OS_FAMILY: Ubuntu
# OS_MANUFACTURER: GNU/Linux
# OS_VERSION: 19.10
# PROCESS_COMMAND_LINE: java -classpath ./binaries/aitoa-code-0.8.29-full.jar aitoa.examples.jssp.JSSPExperiment ./results 6
# PROCESS_ID: 8258
# SESSION_START_DATE_TIME: 2020-02-09T04:23:57.102612Z
# version.aitoa: 0.8.29
# version.aitoa.java.build: 13
# version.aitoa.java.source: 1.8
# version.aitoa.junit: 4.13
# version.aitoa.oshi: 4.3.0
# version.aitoa.slf4j: 1.7.30
# END_SYSTEM

# BEGIN_STATE
# CONSUMED_FES: 25423666
# LAST_IMPROVEMENT_FE: 5568790
# CONSUMED_TIME: 180002
# LAST_IMPROVEMENT_TIME: 39404
# BEST_F: 1208
# END_STATE
# BEST_X
new int[]{ 13, 1, 14, 11, 12, 0, 3, 2, 7, 12, 14, 2, 9, 4, 1, 10, 12, 4, 4, 10, 1, 3, 8, 6, 5, 8, 6, 0, 5, 6, 0, 13, 12, 4, 13, 7, 5, 10, 14, 3, 1, 11, 13, 14, 13, 14, 7, 4, 4, 2, 8, 2, 12, 10, 6, 9, 4, 13, 12, 0, 12, 9, 11, 9, 5, 10, 0, 6, 0, 7, 3, 3, 11, 2, 1, 0, 6, 7, 9, 2, 14, 13, 10, 3, 8, 5, 9, 4, 2, 8, 8, 1, 11, 9, 3, 11, 2, 6, 8, 1, 5, 3, 0, 6, 7, 14, 13, 0, 1, 5, 12, 7, 11, 5, 11, 0, 7, 3, 10, 9, 4, 10, 3, 7, 9, 14, 14, 8, 11, 2, 8, 4, 1, 5, 10, 8, 1, 10, 12, 14, 13, 12, 7, 13, 6, 11, 6, 5, 9, 2}
# END_BEST_X
# BEST_Y
new aitoa.examples.jssp.JSSPCandidateSolution(new int[][] {
{ 11, 0, 68, 8, 68, 107, 5, 235, 284, 0, 284, 356, 1, 401, 424, 14, 424, 471, 9, 471, 476, 2, 517, 572, 3, 680, 771, 4, 771, 814, 6, 814, 889, 12, 889, 969, 10, 969, 993, 7, 993, 1065, 13, 1065, 1160},
{ 3, 0, 68, 2, 68, 118, 12, 118, 178, 4, 182, 252, 6, 300, 390, 1, 424, 509, 9, 592, 680, 5, 680, 749, 13, 749, 772, 0, 831, 857, 11, 946, 964, 7, 964, 973, 14, 985, 1013, 10, 1061, 1110, 8, 1110, 1190},
{ 14, 0, 24, 4, 92, 126, 6, 126, 217, 13, 217, 309, 12, 358, 398, 11, 461, 538, 10, 538, 556, 0, 635, 673, 7, 673, 764, 2, 764, 825, 9, 825, 893, 8, 893, 956, 3, 957, 1029, 1, 1029, 1096, 5, 1096, 1105},
{ 2, 118, 211, 12, 211, 267, 10, 267, 358, 1, 358, 401, 11, 401, 461, 4, 478, 490, 9, 490, 540, 7, 540, 571, 13, 571, 577, 8, 752, 804, 3, 804, 900, 14, 900, 977, 0, 977, 996, 5, 996, 1023, 6, 1095, 1112},
{ 13, 0, 10, 8, 10, 45, 5, 284, 343, 10, 358, 391, 3, 391, 490, 2, 510, 517, 0, 552, 582, 6, 582, 590, 1, 590, 629, 7, 764, 802, 9, 917, 970, 4, 1026, 1056, 14, 1056, 1104, 12, 1104, 1155, 11, 1155, 1173},
{ 14, 24, 53, 4, 175, 182, 13, 309, 332, 7, 332, 430, 2, 430, 510, 10, 510, 529, 5, 529, 601, 3, 612, 680, 8, 680, 705, 11, 705, 720, 1, 720, 733, 0, 733, 831, 9, 893, 917, 12, 969, 1058, 6, 1058, 1095},
{ 1, 0, 19, 6, 19, 90, 12, 267, 358, 13, 358, 404, 4, 404, 478, 0, 478, 552, 3, 552, 612, 14, 612, 689, 10, 689, 727, 9, 727, 747, 2, 825, 882, 5, 901, 946, 11, 964, 1054, 8, 1054, 1089, 7, 1089, 1138},
{ 0, 0, 8, 4, 8, 92, 10, 92, 191, 3, 191, 234, 7, 234, 324, 13, 444, 516, 12, 530, 602, 11, 602, 612, 8, 705, 752, 6, 752, 802, 5, 802, 901, 14, 977, 985, 1, 1096, 1105, 9, 1105, 1162, 2, 1162, 1208},
{ 7, 0, 62, 1, 62, 135, 4, 135, 175, 5, 175, 235, 6, 235, 300, 14, 300, 355, 13, 404, 444, 12, 444, 530, 9, 540, 592, 0, 592, 635, 11, 635, 695, 3, 771, 782, 2, 882, 954, 8, 956, 977, 10, 1110, 1119},
{ 12, 0, 79, 9, 79, 137, 0, 137, 212, 14, 212, 261, 8, 261, 335, 6, 390, 488, 5, 601, 664, 1, 733, 759, 7, 802, 874, 11, 874, 946, 3, 946, 957, 4, 957, 1026, 10, 1026, 1061, 2, 1061, 1103, 13, 1160, 1194}})

if(!(require("plotteR"))){
if(!(require("devtools"))){
install.packages("devtools");
library("devtools");
};
devtools::install_github("thomasWeise/plotteR");
library("plotteR");
};
plot.gantt(list(
 list( list(job=11L,start=0L,end=68L)
,list(job=8L,start=68L,end=107L)
,list(job=5L,start=235L,end=284L)
,list(job=0L,start=284L,end=356L)
,list(job=1L,start=401L,end=424L)
,list(job=14L,start=424L,end=471L)
,list(job=9L,start=471L,end=476L)
,list(job=2L,start=517L,end=572L)
,list(job=3L,start=680L,end=771L)
,list(job=4L,start=771L,end=814L)
,list(job=6L,start=814L,end=889L)
,list(job=12L,start=889L,end=969L)
,list(job=10L,start=969L,end=993L)
,list(job=7L,start=993L,end=1065L)
,list(job=13L,start=1065L,end=1160L)
)
,list( list(job=3L,start=0L,end=68L)
,list(job=2L,start=68L,end=118L)
,list(job=12L,start=118L,end=178L)
,list(job=4L,start=182L,end=252L)
,list(job=6L,start=300L,end=390L)
,list(job=1L,start=424L,end=509L)
,list(job=9L,start=592L,end=680L)
,list(job=5L,start=680L,end=749L)
,list(job=13L,start=749L,end=772L)
,list(job=0L,start=831L,end=857L)
,list(job=11L,start=946L,end=964L)
,list(job=7L,start=964L,end=973L)
,list(job=14L,start=985L,end=1013L)
,list(job=10L,start=1061L,end=1110L)
,list(job=8L,start=1110L,end=1190L)
)
,list( list(job=14L,start=0L,end=24L)
,list(job=4L,start=92L,end=126L)
,list(job=6L,start=126L,end=217L)
,list(job=13L,start=217L,end=309L)
,list(job=12L,start=358L,end=398L)
,list(job=11L,start=461L,end=538L)
,list(job=10L,start=538L,end=556L)
,list(job=0L,start=635L,end=673L)
,list(job=7L,start=673L,end=764L)
,list(job=2L,start=764L,end=825L)
,list(job=9L,start=825L,end=893L)
,list(job=8L,start=893L,end=956L)
,list(job=3L,start=957L,end=1029L)
,list(job=1L,start=1029L,end=1096L)
,list(job=5L,start=1096L,end=1105L)
)
,list( list(job=2L,start=118L,end=211L)
,list(job=12L,start=211L,end=267L)
,list(job=10L,start=267L,end=358L)
,list(job=1L,start=358L,end=401L)
,list(job=11L,start=401L,end=461L)
,list(job=4L,start=478L,end=490L)
,list(job=9L,start=490L,end=540L)
,list(job=7L,start=540L,end=571L)
,list(job=13L,start=571L,end=577L)
,list(job=8L,start=752L,end=804L)
,list(job=3L,start=804L,end=900L)
,list(job=14L,start=900L,end=977L)
,list(job=0L,start=977L,end=996L)
,list(job=5L,start=996L,end=1023L)
,list(job=6L,start=1095L,end=1112L)
)
,list( list(job=13L,start=0L,end=10L)
,list(job=8L,start=10L,end=45L)
,list(job=5L,start=284L,end=343L)
,list(job=10L,start=358L,end=391L)
,list(job=3L,start=391L,end=490L)
,list(job=2L,start=510L,end=517L)
,list(job=0L,start=552L,end=582L)
,list(job=6L,start=582L,end=590L)
,list(job=1L,start=590L,end=629L)
,list(job=7L,start=764L,end=802L)
,list(job=9L,start=917L,end=970L)
,list(job=4L,start=1026L,end=1056L)
,list(job=14L,start=1056L,end=1104L)
,list(job=12L,start=1104L,end=1155L)
,list(job=11L,start=1155L,end=1173L)
)
,list( list(job=14L,start=24L,end=53L)
,list(job=4L,start=175L,end=182L)
,list(job=13L,start=309L,end=332L)
,list(job=7L,start=332L,end=430L)
,list(job=2L,start=430L,end=510L)
,list(job=10L,start=510L,end=529L)
,list(job=5L,start=529L,end=601L)
,list(job=3L,start=612L,end=680L)
,list(job=8L,start=680L,end=705L)
,list(job=11L,start=705L,end=720L)
,list(job=1L,start=720L,end=733L)
,list(job=0L,start=733L,end=831L)
,list(job=9L,start=893L,end=917L)
,list(job=12L,start=969L,end=1058L)
,list(job=6L,start=1058L,end=1095L)
)
,list( list(job=1L,start=0L,end=19L)
,list(job=6L,start=19L,end=90L)
,list(job=12L,start=267L,end=358L)
,list(job=13L,start=358L,end=404L)
,list(job=4L,start=404L,end=478L)
,list(job=0L,start=478L,end=552L)
,list(job=3L,start=552L,end=612L)
,list(job=14L,start=612L,end=689L)
,list(job=10L,start=689L,end=727L)
,list(job=9L,start=727L,end=747L)
,list(job=2L,start=825L,end=882L)
,list(job=5L,start=901L,end=946L)
,list(job=11L,start=964L,end=1054L)
,list(job=8L,start=1054L,end=1089L)
,list(job=7L,start=1089L,end=1138L)
)
,list( list(job=0L,start=0L,end=8L)
,list(job=4L,start=8L,end=92L)
,list(job=10L,start=92L,end=191L)
,list(job=3L,start=191L,end=234L)
,list(job=7L,start=234L,end=324L)
,list(job=13L,start=444L,end=516L)
,list(job=12L,start=530L,end=602L)
,list(job=11L,start=602L,end=612L)
,list(job=8L,start=705L,end=752L)
,list(job=6L,start=752L,end=802L)
,list(job=5L,start=802L,end=901L)
,list(job=14L,start=977L,end=985L)
,list(job=1L,start=1096L,end=1105L)
,list(job=9L,start=1105L,end=1162L)
,list(job=2L,start=1162L,end=1208L)
)
,list( list(job=7L,start=0L,end=62L)
,list(job=1L,start=62L,end=135L)
,list(job=4L,start=135L,end=175L)
,list(job=5L,start=175L,end=235L)
,list(job=6L,start=235L,end=300L)
,list(job=14L,start=300L,end=355L)
,list(job=13L,start=404L,end=444L)
,list(job=12L,start=444L,end=530L)
,list(job=9L,start=540L,end=592L)
,list(job=0L,start=592L,end=635L)
,list(job=11L,start=635L,end=695L)
,list(job=3L,start=771L,end=782L)
,list(job=2L,start=882L,end=954L)
,list(job=8L,start=956L,end=977L)
,list(job=10L,start=1110L,end=1119L)
)
,list( list(job=12L,start=0L,end=79L)
,list(job=9L,start=79L,end=137L)
,list(job=0L,start=137L,end=212L)
,list(job=14L,start=212L,end=261L)
,list(job=8L,start=261L,end=335L)
,list(job=6L,start=390L,end=488L)
,list(job=5L,start=601L,end=664L)
,list(job=1L,start=733L,end=759L)
,list(job=7L,start=802L,end=874L)
,list(job=11L,start=874L,end=946L)
,list(job=3L,start=946L,end=957L)
,list(job=4L,start=957L,end=1026L)
,list(job=10L,start=1026L,end=1061L)
,list(job=2L,start=1061L,end=1103L)
,list(job=13L,start=1160L,end=1194L)
)
), prefix.job="");
# END_BEST_Y